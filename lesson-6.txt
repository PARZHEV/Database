Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение. Агрегация данных”
Работаем с БД vk и тестовыми данными, которые вы сгенерировали ранее:
1. Проанализировать запросы, которые выполнялись на занятии, определить возможные корректировки и/или улучшения (JOIN пока не применять).
Не очень понятно какие запросы конкретно. И какие конкретно корректировки. Сложно оценить при текущем опыте и знаниях какие корректировки конкретно и для чего я могу сделать. В целом все понятно все запросы использовал. Только конечно сложновато успевать сразу все понять. пересматривал видео урока. Гуглил. Без JOIN не понял некоторые задании
2. Пусть задан некоторый пользователь. 
Из всех друзей этого пользователя найдите человека, который больше всех общался с нашим пользователем.
Берем пользователя 1 и смотрим кто больше всех отправил ему сообщение
SELECT
        from_user_id,
        to_user_id,
        COUNT(to_user_id) as main
FROM
        messages m
GROUP BY
        from_user_id,
        to_user_id
HAVING
        main >1
        AND to_user_id = 1
ORDER BY
        main DESC ; 
 
кто больше всех из друзей отправил пользователю 1 сообщений за счет сортировки видим больше всех отправленных сообщений


   3. Подсчитать общее количество лайков, которые получили 10 самых молодых пользователей.
SELECT
        *
FROM
        likes
WHERE
        user_id IN (
        SELECT
                user_id
        FROM
                profiles p
        ORDER BY
                birthday DESC
        LIMIT 10) ;
Не понял как можно сделать без джойна это. LIMIT не работает в этой конструкции… По идеи я подаю на вывод необходимые ID
   4. Определить кто больше поставил лайков (всего) - мужчины или женщины?
SELECT 
    p.gerder, COUNT(*) AS count_likes
FROM
    likes l
        LEFT JOIN
    profiles p ON l.user_id = p.user_id
GROUP BY
        p.gerder ;


   5. Найти 10 пользователей, которые проявляют наименьшую активность в использовании социальной сети.
Взял первых 10 юзеров кто ставит меньше всех лайков
SELECT 
    p.user_id , COUNT(*) AS count_likes
FROM
    likes l
        LEFT JOIN
    profiles p ON l.user_id = p.user_id
GROUP BY
        p.user_id 
ORDER BY count_likes LIMIT 10;