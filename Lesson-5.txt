Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»
1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) COMMENT 'Имя покупателя',
  birthday_at DATE COMMENT 'Дата рождения',
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) COMMENT = 'Покупатели';


INSERT INTO users (name, birthday_at) VALUES
  ('Геннадий', '1990-10-05'),
  ('Наталья', '1984-11-12'),
  ('Александр', '1985-05-20'),
  ('Сергей', '1988-02-14'),
  ('Иван', '1998-01-12'),
  ('Мария', '1992-08-29');


1        Геннадий        1990-10-05        2021-09-22 12:52:50        2021-09-22 12:52:50
2        Наталья        1984-11-12        2021-09-22 12:52:50        2021-09-22 12:52:50
3        Александр        1985-05-20        2021-09-22 12:52:50        2021-09-22 12:52:50
4        Сергей        1988-02-14        2021-09-22 12:52:50        2021-09-22 12:52:50
5        Иван        1998-01-12        2021-09-22 12:52:50        2021-09-22 12:52:50
6        Мария        1992-08-29        2021-09-22 12:52:50        2021-09-22 12:52:50






2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.
ALTER TABLE users MODIFY created_at DATETIME DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE users MODIFY updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;


3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.
  

SELECT value
FROM 
                storehouses_products 
ORDER BY 
    CASE
        WHEN value = '0' THEN 1 else 0
    END, value
4. (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде списка английских названий (may, august)
SELECT * FROM users u WHERE birthday_at IN ('may';'august') ;
5. (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN.
SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY FIELD(id,5,1,2) 


Практическое задание теме «Агрегация данных»
1. Подсчитайте средний возраст пользователей в таблице users.
SELECT
  name,
  FLOOR((TO_DAYS(NOW()) - TO_DAYS(birthday_at))/365.25) AS age
FROM
  users;


2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.


SELECT DAYNAME(birthday_at) AS days, COUNT(id) FROM users GROUP BY days;
3. (по желанию) Подсчитайте произведение чисел в столбце таблицы.
  

 SELECT
        EXP(SUM(LN(value)))
FROM
        value v ;